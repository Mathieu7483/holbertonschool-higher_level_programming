>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Case matrix must be a list of lists of integers or floats
>>> matrix_divided ([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided ([[1, -2, 3], [-4, 5, 6]], 3)
[[0.33, -0.67, 1.0], [-1.33, 1.67, 2.0]]
>>> matrix_divided ([[1.6, 2, 3.8], [4, 5, 6]], 2)
[[0.8, 1.0, 1.9], [2.0, 2.5, 3.0]]
>>> matrix_divided ([[1.6, 2, 3.8], [4, 5, 6]], -2)
[[-0.8, -1.0, -1.9], [-2.0, -2.5, -3.0]]

>>> matrix_divided ([['a', 2, 3], [4, 5, 6]], 4)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix(list of lists) of integers/floats

# Case matrix Each row of the matrix must be of the same size
>>> matrix_divided ([[1, 2], [1, 2, 3]], 4)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# Case div must be a number (integer or float)
>>> matrix_divided ([[1, 2, 3], [4, 5, 6]], 4)
[[0.25, 0.5, 0.75], [1.0, 1.25, 1.5]]

>>> matrix_divided ([[10, 20, 30], [40, 50, 60]], 2.56)
[[3.91, 7.81, 11.72], [15.62, 19.53, 23.44]]

>>> matrix_divided ([[1, 2, 3], [4, 5, 6]], "str")
Traceback (most recent call last):
...
TypeError: div must be a number

# Case div canâ€™t be equal to 0
>>> matrix_divided ([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
